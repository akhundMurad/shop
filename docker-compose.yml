version: "3.7"

services:
  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.app
    image: backend
    container_name: backend
    command: sh -c "cd src && python manage.py migrate && python manage.py runserver"
    restart: always
    tty: true
    ports:
      - "8000:8000"
    env_file:
      - .envfile
    depends_on:
      - pg_db
      - redis
    volumes:
      - .:/app
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "1"


  celery:
    build:
      context: .
      dockerfile: docker/Dockerfile.app
    container_name: celery
    command: sh -c "celery -A tasks.apps worker -l info"
    restart: always
    env_file:
      - .envfile
    depends_on:
      - redis
      - backend
      - pg_db
    logging:
      driver: "json-file"
      options:
        max-size: '10m'
        max-file: '1'

  celery_beat:
    build:
      context: .
      dockerfile: docker/Dockerfile.app
    container_name: celery_beat
    command: sh -c "celery -A tasks.apps beat --loglevel=debug --scheduler django_celery_beat.schedulers:DatabaseScheduler && python manage.py setupperiodicttasks"
    restart: always
    env_file:
      - .envfile
    depends_on:
      - redis
      - backend
      - pg_db
    logging:
      driver: "json-file"
      options:
        max-size: '10m'
        max-file: '1'

  pg_db:
    image: postgres:13-alpine
    container_name: pg_db
    restart: unless-stopped
    env_file:
      - .envfile
    ports:
      - "5432:5432"
    volumes:
      - shop_pg_db:/var/lib/postgresql/data
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '1'

  redis:
    image: redis:alpine
    working_dir: /data
    expose:
      - '6379'
    volumes:
      - /data:/data
    container_name: redis
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '1'

volumes:
  shop_pg_db:
  redis: